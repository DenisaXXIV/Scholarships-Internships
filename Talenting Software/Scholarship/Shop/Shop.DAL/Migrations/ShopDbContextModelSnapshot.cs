// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop.DAL.Migrations;

#nullable disable

namespace Shop.DAL.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    partial class ShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Shop.DAL.Entities.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientID"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientID");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientID = 1,
                            City = "Ploiesti",
                            Country = "Romania",
                            GenderId = 2,
                            Name = "Florian-Andrei Barbu",
                            Number = "3A",
                            PhoneNumber = "0755864567",
                            Street = "Bulevardul Castanilor"
                        },
                        new
                        {
                            ClientID = 2,
                            City = "Sinaia",
                            Country = "Romania",
                            GenderId = 1,
                            Name = "Augustina Petrica",
                            Number = "18",
                            PhoneNumber = "0700591298",
                            Street = "Strada Cuza Voda"
                        });
                });

            modelBuilder.Entity("Shop.DAL.Entities.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderId"), 1L, 1);

                    b.Property<string>("ThisGender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("GenderId");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            GenderId = 1,
                            ThisGender = "F"
                        },
                        new
                        {
                            GenderId = 2,
                            ThisGender = "M"
                        });
                });

            modelBuilder.Entity("Shop.DAL.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<float>("TotalAmount")
                        .HasColumnType("real");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ClientId = 2,
                            CreatedDate = "2022-06-10",
                            Discount = 15,
                            TotalAmount = 3f
                        },
                        new
                        {
                            OrderId = 2,
                            ClientId = 1,
                            CreatedDate = "2022-06-09",
                            Discount = 20,
                            TotalAmount = 15f
                        });
                });

            modelBuilder.Entity("Shop.DAL.Entities.OrderedProduct", b =>
                {
                    b.Property<int>("OrderedProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderedProductId"), 1L, 1);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("OrderedProductId");

                    b.ToTable("OrderedProducts");

                    b.HasData(
                        new
                        {
                            OrderedProductId = 1,
                            OrderId = 1,
                            ProductId = 2
                        },
                        new
                        {
                            OrderedProductId = 2,
                            OrderId = 2,
                            ProductId = 1
                        });
                });

            modelBuilder.Entity("Shop.DAL.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("ExpirationDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            ExpirationDate = "2023-04-30",
                            Name = "Curmale uscate",
                            Price = "18,00"
                        },
                        new
                        {
                            ProductId = 2,
                            ExpirationDate = "2025-04-07",
                            Name = "Conserva File de Macrou",
                            Price = "3,50"
                        });
                });

            modelBuilder.Entity("Shop.DAL.Entities.ShoppingCart", b =>
                {
                    b.Property<int>("ShoppingCartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShoppingCartId"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<bool>("HasExpired")
                        .HasColumnType("bit");

                    b.Property<float>("TotalAmount")
                        .HasColumnType("real");

                    b.HasKey("ShoppingCartId");

                    b.ToTable("ShoppingCarts");

                    b.HasData(
                        new
                        {
                            ShoppingCartId = 1,
                            ClientId = 1,
                            HasExpired = true,
                            TotalAmount = 3f
                        },
                        new
                        {
                            ShoppingCartId = 2,
                            ClientId = 2,
                            HasExpired = false,
                            TotalAmount = 15f
                        });
                });

            modelBuilder.Entity("Shop.DAL.Entities.ShoppingCartProduct", b =>
                {
                    b.Property<int>("ShoppingCartProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShoppingCartProductId"), 1L, 1);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingCartId")
                        .HasColumnType("int");

                    b.HasKey("ShoppingCartProductId");

                    b.ToTable("ShoppingCartProducts");

                    b.HasData(
                        new
                        {
                            ShoppingCartProductId = 1,
                            ProductId = 2,
                            ShoppingCartId = 1
                        },
                        new
                        {
                            ShoppingCartProductId = 2,
                            ProductId = 1,
                            ShoppingCartId = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
